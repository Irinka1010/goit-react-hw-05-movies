{"version":3,"file":"static/js/50.90034119.chunk.js","mappings":"6PACe,SAASA,EAAT,GAAkC,IAAdC,EAAa,EAAbA,UACjC,OACE,8BACGA,EAAUC,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACb,gBAAIC,UAAU,OAAd,WACE,gBACEC,IACEH,EAAY,0CAC2BA,GACnC,oHAENI,IAAKN,EACLO,MAAM,WAER,wBAAKP,KACL,uCAAeC,OAXSE,EADb,KAiBpB,C,eCpBYK,E,OAAWC,GAAAA,GAAH,kaCKN,SAASC,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOb,EAAP,KAAkBc,EAAlB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,IAAUJ,GAFb,OAEVK,EAFU,OAGhBR,EAAaQ,GAHG,gDAKhBN,EAAS,EAAD,IALQ,yDAAH,qDAQjBI,GACD,GAAE,CAACH,KAGF,gCACGF,IAAS,gDADZ,KAEE,SAACL,EAAD,UAAWV,IAAa,SAACD,EAAD,CAAUC,UAAWA,MAF/C,MAKH,C","sources":["components/ListCast/ListCast.jsx","pages/MovieDetails/Cast/StyledCast.js","pages/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nexport default function ListCast({ castMovie }) {\n  return (\n    <>\n      {castMovie.map(({ name, character, profile_path, id }) => (\n        <li className=\"Item\" key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n            }\n            alt={name}\n            width=\"100px\"\n          />\n          <h3>{name}</h3>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </>\n  );\n}\nListCast.propTypes = {\n  castMovie: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\nexport const CastList = styled.ul`\n  list-style: none;\n  display: grid;\n  place-items: center;\n  padding-top: 20px;\n  grid-template-rows: repeat(1, 1fr);\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  gap: 12px;\n  .Item {\n    width: 160px;\n    height: 100%;\n    text-align: center;\n    border: 1px solid grey;\n    border-radius: 10px;\n    overflow: hidden;\n  }\n  &img {\n    width: 100px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getActors } from 'Services/API';\nimport ListCast from 'components/ListCast/ListCast';\nimport { CastList } from 'pages/MovieDetails/Cast/StyledCast';\n\nexport default function Cast() {\n  const [castMovie, setCastMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      try {\n        const data = await getActors(moviesId);\n        setCastMovie(data);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchActors();\n  }, [moviesId]);\n\n  return (\n    <>\n      {error && <p>Something went wrong</p>};\n      <CastList>{castMovie && <ListCast castMovie={castMovie} />}</CastList>;\n    </>\n  );\n}\n"],"names":["ListCast","castMovie","map","name","character","profile_path","id","className","src","alt","width","CastList","styled","Cast","useState","setCastMovie","error","setError","moviesId","useParams","useEffect","fetchActors","getActors","data"],"sourceRoot":""}