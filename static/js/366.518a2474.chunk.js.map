{"version":3,"file":"static/js/366.518a2474.chunk.js","mappings":"+PAAe,SAASA,EAAT,GAAkC,IAAdC,EAAa,EAAbA,UACjC,OACE,8BACGA,EAAUC,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACb,2BACE,gBACEC,IACEF,EAAY,0CAC2BA,GACnC,oHAENG,IAAKL,EACLM,MAAM,WAER,wBAAKN,KACL,uCAAeC,OAXRE,EADI,KAiBpB,CCfc,SAASI,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOV,EAAP,KAAkBW,EAAlB,KAGQC,GAAaC,EAAAA,EAAAA,MAAbD,SAmBR,OAlBAE,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAIGC,EAAAA,EAAAA,IAAUN,GAJb,OAIVO,EAJU,OAKhBR,EAAaQ,GALG,gJAAH,qDAYjBF,GACD,GAAE,CAACL,KAEG,wBAAKZ,IAAa,SAACD,EAAD,CAAUC,UAAWA,KAC/C,C","sources":["components/ListCast/ListCast.jsx","pages/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["export default function ListCast({ castMovie }) {\n  return (\n    <>\n      {castMovie.map(({ name, character, profile_path, id }) => (\n        <li key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n            }\n            alt={name}\n            width=\"100px\"\n          />\n          <h3>{name}</h3>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getActors } from 'Services/API';\nimport ListCast from 'components/ListCast/ListCast';\n\nexport default function Cast() {\n  const [castMovie, setCastMovie] = useState(null);\n  // const [error, setError] = useState(null);\n  // const [loading, setLoading] = useState(false);\n  const { moviesId } = useParams();\n  console.log(moviesId);\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      try {\n        // setLoading(true);\n        // setError(null);\n        const data = await getActors(moviesId);\n        setCastMovie(data);\n      } catch (error) {\n        // setError(error);\n      } finally {\n        // setLoading(false);\n      }\n    };\n    fetchActors();\n  }, [moviesId]);\n\n  return <ul>{castMovie && <ListCast castMovie={castMovie} />}</ul>;\n}\n"],"names":["ListCast","castMovie","map","name","character","profile_path","id","src","alt","width","Cast","useState","setCastMovie","moviesId","useParams","console","log","useEffect","fetchActors","getActors","data"],"sourceRoot":""}